ideal:
    - GLOBAL:
        * mod dev/recette/prod ?
    - POSTGRES:
        * is sanitized ? [CRITICAL]
        * use builtin password cryptography ?
        * resilience: what append if connection is lost ?
        * dont update blocked column in api_users if is not necessary
        * optimize double request like get/update
    - SERVER:
        * sanitize/check pseudo in [CRITICAL]
        * sanitize/check str1 str2 in the fizzbuzz [CRITICAL]
        * resilience: delete new user in postgres if error occured from redis after creation ?
        * limit the fizzbuzz ?
        * use env for init.sql ?
        * add a disconnection endpoint (for delete redis keys)
    - PGADMIN:
        ...
    - REDIS:
        * add admins ?
        * add stats ?
        * can have too many tokens by user ?
        * ^ add expire on token (redis and cookies...) ?
        * sanitize ? (with pseudo keys for exemple) [CRITICAL]
        * resilience: what append if connection is lost ?
    - TEST:
        * structure in several files
        * more test on potential crash/session error
        * more test on fizzbuzz result
        * check response content-type ?
    - GO TEST:
        * to do :)